name: Frosti Provision and Deploy 

on: 
  push:
    branches:
      - 'main'
      - 'master'
  workflow_dispatch:

jobs:
  InfraProvision:
    runs-on: macos-latest
    outputs:
        WEB_APP_NAME: ${{ steps.run-frosti.outputs.WEB_APP_NAME }}
        FUNCTION_APP_NAME: ${{ steps.run-frosti.outputs.FUNCTION_APP_NAME }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Check out repository code
        uses: actions/checkout@v3
            
  DeployDotNet:
    runs-on: macos-latest
    if: ${{ 'django' == 'dotnet' }}
    needs: [InfraProvision]
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: | 
            6.0.x
            7.0.x
        
      - name: Install dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build .csproj --configuration Release --no-restore
      
      - name: Test
        run: dotnet test .csproj --no-restore --verbosity normal
        
      - name: Publish
        run: dotnet publish .csproj -c Release --output ./release
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Azure Web Deploy
        if: needs.infraProvision.outputs.WEB_APP_NAME != null && needs.infraProvision.outputs.WEB_APP_NAME != ''
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ needs.infraProvision.outputs.WEB_APP_NAME }}
          package: ./release
          
      - name: Azure Function Deploy
        if: needs.infraProvision.outputs.FUNCTION_APP_NAME != null && needs.infraProvision.outputs.FUNCTION_APP_NAME != ''
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ needs.infraProvision.outputs.FUNCTION_APP_NAME }}
          package: ./release
      
      - name: logout
        run: |
          az logout

  DeployDjango:
    runs-on: macos-latest
    if: ${{ 'django' == 'django' }}
    needs: [InfraProvision]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Create and start virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
         
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy to App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ 'cytology-ppe-eus-WebApp15896fe82' }}
      
      - name: logout
        run: |
          az logout
